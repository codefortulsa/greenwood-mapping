# Generated by Django 4.2.1 on 2023-05-28 01:25

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("pghistory", "0005_events_middlewareevents"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("entities", "0003_delete_event_alter_entity_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessEvent",
            fields=[
                (
                    "entity_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        related_query_name="+",
                        serialize=False,
                        to="entities.entity",
                    ),
                ),
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("name", models.CharField(max_length=120)),
                ("meta", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("name_parsed", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="entity",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="entity",
            name="snapshot_update",
        ),
        migrations.RemoveField(
            model_name="entityevent",
            name="id",
        ),
        migrations.RemoveField(
            model_name="entityevent",
            name="polymorphic_ctype",
        ),
        migrations.AlterField(
            model_name="entityevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="entity_events",
                to="pghistory.context",
            ),
        ),
        migrations.AlterField(
            model_name="entityevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="name_meta_canonical_event",
                to="entities.entity",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="business",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "entities_businessevent" ("canonical_id", "entity_ptr_id", "id", "meta", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "polymorphic_ctype_id") VALUES (NEW."canonical_id", NEW."entity_ptr_id", NEW."id", NEW."meta", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."entity_ptr_id", NEW."polymorphic_ctype_id"); RETURN NULL;',
                    hash="087b1510da3ea233d4c49b7123c4baaef75dd7aa",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_2669a",
                    table="entities_business",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="business",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "entities_businessevent" ("canonical_id", "entity_ptr_id", "id", "meta", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "polymorphic_ctype_id") VALUES (NEW."canonical_id", NEW."entity_ptr_id", NEW."id", NEW."meta", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."entity_ptr_id", NEW."polymorphic_ctype_id"); RETURN NULL;',
                    hash="588f3d7e5460976a12444b62fad9935af44cec64",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_88104",
                    table="entities_business",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entity",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "entities_entityevent" ("canonical_id", "meta", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."canonical_id", NEW."meta", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="5aa4c447ca310db59a908760c8ebd0dfec246c59",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_39471",
                    table="entities_entity",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entity",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name" IS DISTINCT FROM (NEW."name") OR OLD."meta" IS DISTINCT FROM (NEW."meta") OR OLD."canonical_id" IS DISTINCT FROM (NEW."canonical_id"))',
                    func='INSERT INTO "entities_entityevent" ("canonical_id", "meta", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."canonical_id", NEW."meta", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="1c873ec8ca890336ee32129336f1b03eda6f33f0",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_1d8e4",
                    table="entities_entity",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="person",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "entities_personevent" ("name_parsed", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."name_parsed", _pgh_attach_context(), NOW(), \'snapshot\', NEW."entity_ptr_id"); RETURN NULL;',
                    hash="ed9681298d5d74f5796558e91aaeffe3765e7237",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_7ccd7",
                    table="entities_person",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="person",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name_parsed" IS DISTINCT FROM (NEW."name_parsed"))',
                    func='INSERT INTO "entities_personevent" ("name_parsed", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."name_parsed", _pgh_attach_context(), NOW(), \'snapshot\', NEW."entity_ptr_id"); RETURN NULL;',
                    hash="dd785d93d5b1974f7f956b1356b38b0ee75c12b9",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_72e43",
                    table="entities_person",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddField(
            model_name="personevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="person_events",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="personevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="name_parsed_event",
                to="entities.person",
            ),
        ),
        migrations.AddField(
            model_name="businessevent",
            name="canonical",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="entities.entity",
            ),
        ),
        migrations.AddField(
            model_name="businessevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="person_events",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="businessevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="event",
                to="entities.business",
            ),
        ),
        migrations.AddField(
            model_name="businessevent",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                db_constraint=False,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="contenttypes.contenttype",
            ),
        ),
    ]
